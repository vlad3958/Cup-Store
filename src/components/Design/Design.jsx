import React, { useState } from 'react';
import './Design.css';
import formImg from '../../assets/form.png';

const Design = () => {
  const [isLoading, setIsLoading] = useState(false);
  const [selectedFile, setSelectedFile] = useState(null);
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    email: '',
    productType: '',
    size: '',
    quantity: ''
  });

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleFileChange = (e) => {
    const file = e.target.files[0];
    setSelectedFile(file);
    
    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ñ–∞–π–ª—É
    if (file) {
      const maxSize = 10 * 1024 * 1024; // 10MB
      const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'application/pdf', 'text/plain'];
      
      if (file.size > maxSize) {
        alert('–§–∞–π–ª –∑–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–∏–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä: 10MB');
        e.target.value = '';
        setSelectedFile(null);
        return;
      }
      
      if (!allowedTypes.includes(file.type)) {
        alert('–ù–µ–ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª—É. –î–æ–∑–≤–æ–ª–µ–Ω—ñ: JPG, PNG, GIF, PDF, TXT');
        e.target.value = '';
        setSelectedFile(null);
        return;
      }
    }
  };  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsLoading(true);

    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è
    if (!formData.name || !formData.phone || !formData.email) {
      alert('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è');
      setIsLoading(false);
      return;
    }

    try {
      const formDataToSend = new FormData();
      formDataToSend.append('name', formData.name);
      formDataToSend.append('phone', formData.phone);
      formDataToSend.append('email', formData.email);
      formDataToSend.append('productType', formData.productType);
      formDataToSend.append('size', formData.size);
      formDataToSend.append('quantity', formData.quantity);
      formDataToSend.append('message', `–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥ ${formData.name}`);
      
      if (selectedFile) {
        formDataToSend.append('file', selectedFile);
      }      // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ Getform.io (–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π URL –∑ –ø–∞–Ω–µ–ª—ñ)
      const response = await fetch('https://getform.io/f/bkknevlb', {
        method: 'POST',
        body: formDataToSend
      });

      if (response.ok) {
        let fileInfo = selectedFile ? `\n‚Ä¢ –§–∞–π–ª: ${selectedFile.name}` : '';
        alert(`‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!

–î–µ—Ç–∞–ª—ñ:
‚Ä¢ –Ü–º'—è: ${formData.name}
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
‚Ä¢ Email: ${formData.email}
‚Ä¢ –ü—Ä–æ–¥—É–∫—Ç: ${formData.productType || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
‚Ä¢ –†–æ–∑–º—ñ—Ä: ${formData.size || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
‚Ä¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å: ${formData.quantity || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}${fileInfo}

–ú–∏ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º!`);
        
        // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º–∏
        setFormData({
          name: '',
          phone: '',
          email: '',
          productType: '',
          size: '',
          quantity: ''
        });
        setSelectedFile(null);
      } else {
        throw new Error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏');
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞:', error);
      alert('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –∑–≤\'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞–º–∏: +380 96 055 88 79');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <section id="design" className="design-section">
      <div className="design-container">
        <form 
          className="design-form" 
          onSubmit={handleSubmit}
          encType="multipart/form-data"
          method="post"
        >
          <img src={formImg} alt="–§–æ—Ä–º–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è" className="form-background" />
          <div className="form-inputs">            <input 
              type="text" 
              name="name"
              className="form-input input-name" 
              placeholder=""
              value={formData.name}
              onChange={handleInputChange}
              required
            />
            <input 
              type="tel" 
              name="phone"
              className="form-input input-phone" 
              placeholder=""
              value={formData.phone}
              onChange={handleInputChange}
              required
            />
            <input 
              type="email" 
              name="email"
              className="form-input input-email" 
              placeholder=""
              value={formData.email}
              onChange={handleInputChange}
              required
            />
            <select 
              name="productType"
              className="form-input input-product" 
              value={formData.productType}
              onChange={handleInputChange}
            >
              <option value=""></option>
              <option value="–æ–¥–Ω–æ—à–∞—Ä–æ–≤—ñ —Å—Ç–∞–∫–∞–Ω–∏">–æ–¥–Ω–æ—à–∞—Ä–æ–≤—ñ —Å—Ç–∞–∫–∞–Ω–∏</option>
              <option value="–¥–≤–æ—à–∞—Ä–æ–≤—ñ —Å—Ç–∞–∫–∞–Ω–∏">–¥–≤–æ—à–∞—Ä–æ–≤—ñ —Å—Ç–∞–∫–∞–Ω–∏</option>
              <option value="–≥–æ—Ñ—Ä–∞">–≥–æ—Ñ—Ä–∞</option>
              <option value="—Ç–∞—Ä—ñ–ª–∫–∞">—Ç–∞—Ä—ñ–ª–∫–∞</option>
            </select>
            <select 
              name="size"
              className="form-input input-size" 
              value={formData.size}
              onChange={handleInputChange}
            >
              <option value=""></option>
              <option value="110–º–ª">110–º–ª</option>
              <option value="170–º–ª">170–º–ª</option>
              <option value="180–º–ª">180–º–ª</option>
              <option value="250–º–ª">250–º–ª</option>
              <option value="275–º–ª">275–º–ª</option>
              <option value="350–º–ª">350–º–ª</option>
              <option value="400–º–ª">400–º–ª</option>
              <option value="500–º–ª">500–º–ª</option>
            </select>
            <input 
              type="number" 
              name="quantity"
              className="form-input input-quantity" 
              placeholder=""
              min="1"
              value={formData.quantity}
              onChange={handleInputChange}
            />
              {/* –ü–æ–ª–µ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É */}
            <div className="file-upload-container">
              <label htmlFor="attachment" className="file-upload-label">
                
              </label>
              <input 
                type="file" 
                name="attachment"
                id="attachment"
                className="file-input"
                onChange={handleFileChange}
                accept=".jpg,.jpeg,.png,.gif,.pdf,.txt"
              />
              {selectedFile && (
                <div className="file-info">
                  <span className="file-name">üìÑ {selectedFile.name}</span>
                  <span className="file-size">({(selectedFile.size / 1024).toFixed(1)} KB)</span>
                </div>
              )}
            </div>            {/* –ü—Ä–∏—Ö–æ–≤–∞–Ω–∏–π input –¥–ª—è timestamp - –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω */}
            
            {/* –ö–Ω–æ–ø–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ */}            <button
              type="submit" 
              className="submit-button"
              disabled={isLoading}
            >
              {isLoading ? '‚è≥ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ...' : 'üìß –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'}
            </button>
          </div>
        </form>
      </div>
    </section>
  );
};

export default Design;